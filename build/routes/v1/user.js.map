{"version":3,"sources":["routes/v1/user.js"],"names":["routingFunc","express","args","user","userCtrl"],"mappings":";;;;;QAQgBA,W,GAAAA,W;;AARhB;;IAAYC,O;;AAEZ;;;;AAEA;;;;AAIO,SAASD,WAAT,CAAqBE,IAArB,EAA2B;AAChC,MAAIC,OAAOF,SAAX;;AAEA,MAAIG,WAAWF,KAAKE,QAApfile":"user.js","sourcesContent":["import * as express from 'express';\n\nimport { UserController } from '../../controller/user';\n\n/**\n * @apiDefine 5xx Error 5xx\n */\n\nexport function routingFunc(args) {\n  let user = express();\n\n  let userCtrl = args.userCtrl;\n\n//   /**\n//    * @api {post} /api/v1/games Create a game\n//    * @apiDescription 게임 생성\n//    * @apiName CreateGame\n//    * @apiGroup GameController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games\n//    *\n//    *    body:\n//    *    {\n//    *      \"name\":\"testgamett\",\n//    *      \"description\":\"test\"\n//    *    }\n//    * @apiParam {string} name 게임 이름\n//    * @apiParam {string} description 게임 설명\n//    *\n//    * @apiSuccess {json} id 생성된 게임의 ID\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *    {\n//    *      \"id\": \"93235b685b6b346bc60fb47e277daa5f\"\n//    *    }\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    */\n//   game.post('/',\n//     gameCtrl.createGame.bind(gameCtrl)\n//   );\n\n//   /**\n//    * @api {post} /api/v1/games/:gid/role/:roleid/member Add a member to the game with the role\n//    * @apiDescription 게임에 사용자 추가\n//    * @apiName AddMemberToGame\n//    * @apiGroup RoleController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/8f02840880967fa09ffeea61bf42cd3d/role/testrole/member\n//    *\n//    *    body:\n//    *    {\n//    *      \"userID\":\"userID\"\n//    *    }\n//    * @apiParam {string} gid 사용자를 추가할 게임 ID\n//    * @apiParam {string} roleid 추가할 사용자가 가질 권한(role) 이름\n//    * @apiParam {string} userID 추가할 사용자의 User ID\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} RoleNotFoundError 권한(role)을 찾을 수 없음\n//    * @apiError {string} UserNotFoundError 사용자를 찾을 수 없음\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.post('/:gid/role/:roleid/member',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'admin'),\n//     roleCtrl.addMember.bind(roleCtrl)\n//   );\n\n//   /**\n//    * @api {post} /api/v1/games/:gid/role Create a role to the game\n//    * @apiDescription 게임에 권한(role) 생성\n//    * @apiName CreateRoleToGame\n//    * @apiGroup RoleController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/51e135221c6d85392c3ab4712d41dfc6/role\n//    *\n//    *    body:\n//    *    {\n//    *      \"role\":\"testrole\"\n//    *    }\n//    * @apiParam {string} gid 권한(role)을 추가할 게임 ID\n//    * @apiParam {string} role 추가할 권한(role) 이름\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} RoleAlreadyExistError 권한(role)이 이미 생성되어 있음\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.post('/:gid/role',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'admin'),\n//     roleCtrl.createRole.bind(roleCtrl)\n//   );\n\n//   /**\n//    * @api {delete} /api/v1/games/:gid/role/:roleid/member/:memberid Remove a role from the member of the game\n//    * @apiDescription 사용자에게서 게임 권한(role) 제거\n//    * @apiName RemoveRoleFromMember\n//    * @apiGroup RoleController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/48e62fc2d1286912372d73e7ba713624/role/testrole/member/userid\n//    *\n//    *    body: {}\n//    * @apiParam {string} gid 권한(role)를 추가할 게임 ID\n//    * @apiParam {string} roleid 권한(role) 이름\n//    * @apiParam {UserID} memberid 사용자 ID\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} RoleNotFoundError 권한(role)을 찾을 수 없음\n//    * @apiError {string} UserNotFoundError 사용자를 찾을 수 없음\n//    * @apiError {string} CannotRemoveError 제거할 수 없는 권한(role)\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.delete('/:gid/role/:roleid/member/:memberid',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'admin'),\n//     roleCtrl.removeMember.bind(roleCtrl)\n//   );\n\n//   /**\n//    * @api {delete} /api/v1/games/:gid/role/:roleid Delete a role from the game\n//    * @apiDescription 게임 권한(role) 삭제\n//    * @apiName DeleteRoleFromGame\n//    * @apiGroup RoleController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/cb08749d5bdecc3502527c0b6b4d68c7/role/testrole\n//    *\n//    *    body: {}\n//    * @apiParam {string} gid 권한(role)를 추가할 게임 ID\n//    * @apiParam {string} roleid 권한(role) 이름\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} RoleNotFoundError 권한(role)을 찾을 수 없음\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.delete('/:gid/role/:roleid',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'admin'),\n//     roleCtrl.removeRole.bind(roleCtrl)\n//   );\n\n//   /**\n//    * @api {get} /api/v1/games/:gid?fields=value Get information of the game\n//    * @apiDescription 게임 정보 가져오기\n//    * @apiName GetGame\n//    * @apiGroup GameController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/9e825759c51f14adec92eb2a3332b66a?fields=description&fields=members\n//    *\n//    *    body: {}\n//    * @apiParam {string} gid 게임 ID\n//    * @apiParam {string[]} fields 가져올 게임 정보(property)\n//    * <table>\n//    * <tr>\n//    * <th>Field Name</th>\n//    * <th>설명</th>\n//    * </tr>\n//    * <tr>\n//    * <td>id</td>\n//    * <td>게임 ID</td>\n//    * </tr>\n//    * <tr>\n//    * <td>name</td>\n//    * <td>게임 이름</td>\n//    * </tr>\n//    * <tr>\n//    * <td>description</td>\n//    * <td>게임 설명</td>\n//    * </tr>\n//    * <tr>\n//    * <td>members</td>\n//    * <td>게임 사용자 그룹(그룹 ID, role 정보 포함)</td>\n//    * </tr>\n//    * <tr>\n//    * <td>creator</td>\n//    * <td>게임 생성자</td>\n//    * </tr>\n//    * </table>\n//    *\n//    * @apiSuccess {json} fields 게임 정보\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *    {\n//    *      \"description\": \"\",\n//    *      \"members\": [\n//    *        {\n//    *          \"role\":\"read\",\n//    *          \"groupID\":\"2375f4654a3a697e41019bf5ac4dd194_read\"\n//    *        }\n//    *      ]\n//    *    }\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.get('/:gid',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'read'),\n//     gameCtrl.getGame.bind(gameCtrl)\n//   );\n\n//   /**\n//    * @api {patch} /api/v1/games/:gid Update the game infomation\n//    * @apiDescription 게임 정보 변경(members, creator 변경 불가능)\n//    * @apiName UpdateGame\n//    * @apiGroup GameController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/cb08749d5bdecc3502527c0b6b4d68c7\n//    *\n//    *    body: {\n//    *      \"name\": \"testgamenamechanged\"\n//    *    }\n//    * @apiParam {string} id 게임 ID\n//    * @apiParam {string} name(option) 변경할 게임 이름\n//    * @apiParam {string} description(option) 변경할 게임 설명\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} CannotUpdateError 변경할 수 없는 정보\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.patch('/:gid',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'write'),\n//     gameCtrl.updateGame.bind(gameCtrl)\n//   );\n\n//   /**\n//    * @api {delete} /api/v1/games/:gid Delete the game\n//    * @apiDescription 게임 삭제\n//    * @apiName DeleteGame\n//    * @apiGroup GameController\n//    * @apiHeader {string} Authorization 인증 토큰\n//    *\n//    * @apiExample Example usage:\n//    *    endpoint: /api/v1/games/cb08749d5bdecc3502527c0b6b4d68c7\n//    *\n//    *    body: {}\n//    * @apiParam {string} gid 삭제할 게임 ID\n//    *\n//    * @apiSuccess {null} null\n//    * @apiSuccessExample Success-Response:\n//    *    HTTP/1.1 200 OK\n//    *\n//    * @apiError (5xx) {string} AuthorizationError 사용자 인증 오류\n//    * @apiError {string} InternalServerError 알 수 없는 오류 발생\n//    * @apiError {string} GameNotFoundError 게임을 찾을 수 없음\n//    * @apiError {string} PermissionDenied 엑세스 권한(role) 제한\n//    */\n//   game.delete('/:gid',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     accessCtrl.isMemberOf.bind(accessCtrl, 'write'),\n//     gameCtrl.removeGame.bind(gameCtrl)\n//   );\n\n//   // all project routes include game information\n//   game.use('/:gid/projects',\n//     gameCtrl.loadRequestedGameInfo.bind(gameCtrl),\n//     project(args)\n//   );\n\n  return user;\n}"]}