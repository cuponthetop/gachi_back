{"version":3,"sources":["util/argparse.js"],"names":["_","pkgObj","require","args","defaultValue","required","type","example","help","dest","action","parser","version","addHelp","description","forEach","arg","addArgument"],"mappings":";;;;;;;AAAA;;AACA;;IAAYA,C;;;;AACZ,IAAIC,SAASC,QAAQ,uBAAR,CAAb;;AAEA,IAAMC,OAAO,CACX,CACE,CAAC,IAAD,EAAO,QAAP,CADF,EAEE;AACEC,gBAAc,IADhB;AAEEC,YAAU,KAFZ;AAGEC,QAAM,KAHR;AAIEC,WAAS,MAJX;AAKEC,QAAM,mBALR;AAMEC,QAAM;AANR,CAFF,CADW,EAYX,CACE,CAAC,SAAD,EAAY,WAAZ,CADF,EAEE;AACEL,gBAAc,KADhB;AAEEC,YAAU,KAFZ;AAGEG,QAAM,uBAHR;AAIEC,QAAM,QAJR;AAKEC,UAAQ;AALV,CAFF,CAZW,EAsBX,CACE,CAAC,QAAD,EAAW,WAAX,CADF,EAEE;AACEN,gBAAc,cADhB;AAEEC,YAAU,KAFZ;AAGEE,WAAS,cAHX;AAIEC,QAAM,+BAJR;AAKEC,QAAM;AALR,CAFF,CAtBW,EAiCX,CACE,CAAC,QAAD,EAAW,WAAX,CADF,EAEE;AACEL,gBAAc,EADhB;AAEEC,YAAU,KAFZ;AAGEE,WAAS,EAHX;AAIEC,QAAM,kCAJR;AAKEC,QAAM;AALR,CAFF,CAjCW,EA4CX,CACE,CAAC,QAAD,EAAW,WAAX,CADF,EAEE;AACEL,gBAAc,KADhB;AAEEC,YAAU,KAFZ;AAGEE,WAAS,KAHX;AAIEC,QAAM,8CAJR;AAKEC,QAAM;AALR,CAFF,CA5CW,EAsDX,CACE,CAAC,SAAD,EAAY,YAAZ,CADF,EAEE;AACEL,gBAAc,OADhB;AAEEC,YAAU,KAFZ;AAGEE,WAAS,OAHX;AAIEC,QAAM,yCAJR;AAKEC,QAAM;AALR,CAFF,CAtDW,EAgEX,CACE,CAAC,QAAD,EAAW,SAAX,CADF,EAEE;AACEL,gBAAc,wBADhB;AAEEC,YAAU,KAFZ;AAGEE,WAAS,wBAHX;AAIEC,QAAM,yBAJR;AAKEC,QAAM;AALR,CAFF,CAhEW,CAAb;;AA4EO,IAAIE,0BAAS,6BAAmB;AACrCC,WAASX,OAAOW,OADqB,EACXC,SAAS,IADE;AAErCC,eAAa;AAFwB,CAAnB,CAAb;;AAKPd,EAAEe,OAAF,CAAUZ,IAAV,EAAgB,UAACa,GAAD,EAAS;AACvBL,SAAOM,WAAP,CAAmBD,IAAI,CAAJ,CAAnB,EAA2BA,IAAI,CAAJ,CAA3B;AACD,CAFD","file":"argparse.js","sourcesContent":["import { ArgumentParser } from 'argparse';\nimport * as _ from 'lodash';\nlet pkgObj = require('../../../package.json');\n\nconst args = [\n  [\n    ['-p', '--port'],\n    {\n      defaultValue: 3003,\n      required: false,\n      type: 'int',\n      example: '3003',\n      help: 'port to listen on',\n      dest: 'port',\n    }\n  ],\n  [\n    ['-isHTTP', '--logHost'],\n    {\n      defaultValue: false,\n      required: false,\n      help: 'Is using http logging',\n      dest: 'isHTTP',\n      action: 'storeTrue'\n    }\n  ],\n  [\n    ['-lhost', '--logHost'],\n    {\n      defaultValue: '172.20.64.61',\n      required: false,\n      example: '172.20.64.61',\n      help: 'Hostname for remote log store',\n      dest: 'lhost',\n    }\n  ],\n\n  [\n    ['-lport', '--logPort'],\n    {\n      defaultValue: 80,\n      required: false,\n      example: 80,\n      help: 'Port number for remote log store',\n      dest: 'lport',\n    }\n  ],\n\n  [\n    ['-lpath', '--logPath'],\n    {\n      defaultValue: 'log',\n      required: false,\n      example: 'log',\n      help: 'Additional path for the log storage endpoint',\n      dest: 'lpath',\n    }\n  ],\n  [\n    ['-llabel', '--logLabel'],\n    {\n      defaultValue: 'Gachi',\n      required: false,\n      example: 'Gachi',\n      help: 'Label for log stored from this instance',\n      dest: 'llabel',\n    }\n  ],\n  [\n    ['-dburi', '--DBUri'],\n    {\n      defaultValue: 'couchbase://localhost/',\n      required: false,\n      example: 'couchbase://localhost/',\n      help: 'URI string for Database',\n      dest: 'DBUri',\n    }\n  ],\n];\n\nexport var parser = new ArgumentParser({\n  version: pkgObj.version,  addHelp: true,\n  description: 'A project management server for Report System.'\n});\n\n_.forEach(args, (arg) => {\n  parser.addArgument(arg[0], arg[1]);\n});"]}